/*//////////////////////////////////////////////////////////////////
////     The SKIRT project -- advanced radiative transfer       ////
////       Â© Astronomical Observatory, Ghent University         ////
///////////////////////////////////////////////////////////////// */

#ifndef PINTEBENCHMARKGEOMETRY_HPP
#define PINTEBENCHMARKGEOMETRY_HPP

#include "AxGeometry.hpp"

////////////////////////////////////////////////////////////////////

/** The PinteBenchmarkGeometry class describes the geometry of a passive disk around a T Tauri star
    as used by Pinte et al. (2009, A&A, 498, 967) in a 3D radiative transfer benchmark. The disk is
    axisymmetric and is characterized by the density distribution \f[ \rho(R,z) = \rho_0\,
    (R/R_d)^{-5/2} \exp\left\{ -\frac12 \left[ \frac{(z/z_d)}{(R/R_d)^{9/8}} \right]^2 \right\}
    \qquad\qquad R_{\text{inn}} < R < R_{\text{out}}. \f] The four parameters in the above
    distribution (the inner and outer radii \f$R_{\text{inn}}\f$ and \f$R_{\text{out}}\f$, the
    scale length \f$R_d\f$ and the scale height \f$z_d\f$) are hard-coded in this class. */
class PinteBenchmarkGeometry : public AxGeometry
{
    ITEM_CONCRETE(PinteBenchmarkGeometry, AxGeometry, "the geometry from the Pinte et al. 2009 benchmark model")
    ITEM_END()

    //============= Construction - Setup - Destruction =============

protected:
    /** This function sets the values of the fixed parameters, and computes the normalization
        factor \f$\rho_0\f$, which is determined by the condition that the total mass equals one.
        This leads to \f[ \rho_0 = \left[ \frac{8}{5}(2\pi)^{3/2}\,R_d^2 z_d
        \left(\frac{R_{\text{out}}}{R_d}\right)^{5/8} -
        \left(\frac{R_{\text{inn}}}{R_d}\right)^{5/8} \right]^{-1}. \f] */
    void setupSelfBefore() override;

    //======================== Other Functions =======================

public:
    /** This function returns the density \f$\rho(R,z)\f$ at the cylindrical radius \f$R\f$ and
        height \f$z\f$. It just implements the analytical formula. */
    double density(double R, double z) const override;

    /** This function generates a random position from the geometry, by drawing a random point from
        the three-dimensional probability density \f$p({\bf{r}})\, {\text{d}}{\bf{r}} =
        \rho({\bf{r}})\, {\text{d}}{\bf{r}}\f$. In the present case, we accomplish this by picking
        a random cylindrical radius \f$R\f$, a random height \f$z\f$, and a random azimuth
        \f$\phi\f$ from the appropriate one-dimensional probability distribution functions (PDF).
        We start by simply generating the azimuth from a uniform distribution between 0 and
        \f$2\pi\f$. Subsequently we generate a random radius \f$R\f$ from the marginal distribution
        \f[ p(R) = \left[ 2\pi \int_{-\infty}^\infty \rho(R,z)\, R\, {\text{d}}z \right] =
        \frac{5}{8}\, \frac{R^{-3/8}}{R_{\text{out}}^{5/8}- R_{\text{inn}}^{5/8}}. \f] The
        cumulative distribution is \f[ P(R) = \int_{R_{\text{inn}}}^R p(R')\,{\text{d}}R' = \frac{
        R^{5/8}-R_{\text{inn}}^{5/8} }{ R_{\text{out}}^{5/8}- R_{\text{inn}}^{5/8} }, \f] so random
        \f$R\f$ is generated by picking a uniform deviate \f${\cal{X}}\f$ and setting \f[ R =
        \left[ R_{\text{inn}}^{5/8} + {\cal{X}} \left( R_{\text{out}}^{5/8} - R_{\text{inn}}^{5/8}
        \right) \right]^{8/5}. \f] Finally, we generate a random height from the conditional
        distribution function \f[ p(z)\,{\text{d}}z = \dfrac{\rho(R,z)\,{\text{d}}z}
        {\int_{-\infty}^\infty \rho(R,z')\, {\text{d}}z'}, \f] where \f$R\f$ is the random
        cylindrical radius generated before. One finds that this distribution is a Gaussian
        distribution with mean zero and dispersion \f[ \sigma(R) = z_d
        \left(\frac{R}{R_d}\right)^{9/8}. \f] Generating a random \f$z\f$ from this distribution is
        easy as the Random class contains a Gaussian random number generating function. */
    Position generatePosition() const override;

    /** This function returns the radial surface density, i.e. the integration of the density along
        a line in the equatorial plane starting at the centre of the coordinate system, \f[
        \Sigma_R = \int_0^\infty \rho(R,0)\,{\text{d}}R. \f] For this geometry, \f[ \Sigma_R =
        \frac{2}{3}\rho_0 R_d \left[\left(\frac{R_\text{inn}}{R_d}\right)^{-3/2} -
        \left(\frac{R_\text{out}}{R_d}\right)^{-3/2}\right]. \f] */
    double SigmaR() const override;

    /** This function returns the Z-axis surface density, i.e. the integration of
        the density along the entire Z-axis, \f[ \Sigma_Z = \int_{-\infty}^\infty \rho(0,0,z)\,
        {\text{d}}z. \f] For the geometry with its central cylindrical cavity, this integral
        is simply zero. */
    double SigmaZ() const override;

    //======================== Data Members ========================

private:
    // data members initialized during setup
    double _Rd{0.};
    double _zd{0.};
    double _Rinn{0.};
    double _Rout{0.};
    double _rho0{0.};
};

////////////////////////////////////////////////////////////////////

#endif
